{"version":3,"sources":["components/RegistrationForm/RegistrationForm.module.scss","components/RegistrationForm/RegistrationForm.js","pages/Register/Register.js"],"names":["module","exports","RegistrationForm","dispatch","useDispatch","useState","name","email","password","credentials","setCredentials","handleInputChange","event","target","value","formSubmitHandler","testName","test","testEmail","testPassword","nameInputValidation","emailInputValidation","passwordInputValidation","authOperations","register","className","contact_form","noValidate","autoComplete","onSubmit","preventDefault","Input","placeholder","form_input","inputProps","type","onChange","id","required","Button","variant","Register"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,aAAe,uCAAuC,WAAa,uC,6IC6HtEC,EA3GU,WACvB,IAAMC,EAAWC,cADY,EAGSC,mBAAS,CAC7CC,KAAM,GACNC,MAAO,GACPC,SAAU,KANiB,mBAGtBC,EAHsB,KAGTC,EAHS,KASvBC,EAAoB,SAACC,GAAW,IAAD,EACXA,EAAMC,OAAtBP,EAD2B,EAC3BA,KAAMQ,EADqB,EACrBA,MAEdJ,EAAe,2BACVD,GADS,kBAEXH,EAAOQ,MAiBNC,EAAoB,SAAC,GAA+B,IAA7BT,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClCQ,EAAW,yHAA6DC,KAC5EX,GAGIY,EAAY,6BAA6BD,KAAKV,GAE9CY,EAAe,yCAAyCF,KAC5DT,IAGe,IAAbQ,EACFI,eACuB,IAAdF,EACTG,eAC0B,IAAjBF,EACTG,eAEAnB,EAASoB,IAAeC,SAAS,CAAElB,OAAMC,QAAOC,cAzBlDE,EAAe,CACbJ,KAAM,GACNC,MAAO,GACPC,SAAU,OA2Bd,OACE,qCACE,uBACEiB,UAAWC,eACXC,YAAU,EACVC,aAAa,KACbC,SA1Ce,SAACjB,GACpBA,EAAMkB,iBACNf,EAAkBN,IAoChB,UAME,cAACsB,EAAA,EAAD,CACEC,YAAY,OACZP,UAAWQ,aACXC,WAAY,CAAE,aAAc,gBAC5BC,KAAK,OACLC,SAAUzB,EACVL,KAAK,OACLQ,MAAOL,EAAYH,KACnB+B,GAAG,OACHC,UAAQ,EACRV,aAAa,OAEf,cAACG,EAAA,EAAD,CACEC,YAAY,QACZP,UAAWQ,aACXC,WAAY,CAAE,aAAc,iBAC5BC,KAAK,QACLC,SAAUzB,EACVL,KAAK,QACLQ,MAAOL,EAAYF,MACnB8B,GAAG,QACHC,UAAQ,EACRV,aAAa,OAEf,cAACG,EAAA,EAAD,CACEC,YAAY,WACZP,UAAWQ,aACXC,WAAY,CAAE,aAAc,oBAC5BC,KAAK,WACLC,SAAUzB,EACVL,KAAK,WACLQ,MAAOL,EAAYD,SACnB6B,GAAG,WACHC,UAAQ,EACRV,aAAa,OAEf,cAACW,EAAA,EAAD,CAAQC,QAAQ,YAAYL,KAAK,SAAjC,yBAIF,cAAC,IAAD,QC9GSM,UATE,WACf,OACE,gCACE,+CACA,cAAC,EAAD","file":"static/js/register-page.477635b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"RegistrationForm_contact_form__3xxjI\",\"form_input\":\"RegistrationForm_form_input__34h1T\"};","import { useState } from \"react\";\nimport { form_input, contact_form } from \"./RegistrationForm.module.scss\";\n\n// Meterial\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\n\n// Toastify\nimport { ToastContainer } from \"react-toastify\";\nimport {\n  nameInputValidation,\n  emailInputValidation,\n  passwordInputValidation,\n} from \"../../utils/error-notifications/error-notifications\";\n\n// Redux\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../redux/auth/auth-operations\";\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    setCredentials({\n      ...credentials,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    formSubmitHandler(credentials);\n  };\n\n  const reset = () => {\n    setCredentials({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  const formSubmitHandler = ({ name, email, password }) => {\n    const testName = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/.test(\n      name\n    );\n\n    const testEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n\n    const testPassword = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/.test(\n      password\n    );\n\n    if (testName !== true) {\n      nameInputValidation();\n    } else if (testEmail !== true) {\n      emailInputValidation();\n    } else if (testPassword !== true) {\n      passwordInputValidation();\n    } else {\n      dispatch(authOperations.register({ name, email, password }));\n      reset();\n    }\n  };\n\n  return (\n    <>\n      <form\n        className={contact_form}\n        noValidate\n        autoComplete=\"on\"\n        onSubmit={handleSubmit}\n      >\n        <Input\n          placeholder=\"Name\"\n          className={form_input}\n          inputProps={{ \"aria-label\": \"contact name\" }}\n          type=\"text\"\n          onChange={handleInputChange}\n          name=\"name\"\n          value={credentials.name}\n          id=\"name\"\n          required\n          autoComplete=\"on\"\n        />\n        <Input\n          placeholder=\"Email\"\n          className={form_input}\n          inputProps={{ \"aria-label\": \"contact email\" }}\n          type=\"email\"\n          onChange={handleInputChange}\n          name=\"email\"\n          value={credentials.email}\n          id=\"email\"\n          required\n          autoComplete=\"on\"\n        />\n        <Input\n          placeholder=\"Password\"\n          className={form_input}\n          inputProps={{ \"aria-label\": \"contact password\" }}\n          type=\"password\"\n          onChange={handleInputChange}\n          name=\"password\"\n          value={credentials.password}\n          id=\"password\"\n          required\n          autoComplete=\"on\"\n        />\n        <Button variant=\"contained\" type=\"submit\">\n          Register\n        </Button>\n      </form>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from \"../../components/RegistrationForm/\";\n\nconst Register = () => {\n  return (\n    <div>\n      <h1>Register Page</h1>\n      <RegistrationForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"sourceRoot":""}