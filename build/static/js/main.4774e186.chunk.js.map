{"version":3,"sources":["redux/auth/auth-reducer.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Loader/Loader.js","components/AppBar/AppBarStyle.ts","components/AppBar/AuthNav/AuthNavStyle.ts","components/AppBar/AuthNav/AuthNav.tsx","components/AppBar/UserMenu/UserMenuStyle.ts","components/AppBar/UserMenu/UserMenu.tsx","components/Form/Form.js","components/Modal/ModalForm.js","components/AppBar/AppBar.tsx","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.tsx","index.tsx","routes/routes.ts","utils/error-notifications/error-notifications.ts","redux/auth/auth-selectors.js","utils/success-notifications/success-notifications.ts","redux/contacts/contacts-selectors.js","redux/auth/auth-operations.js","components/Form/Form.module.scss","redux/auth/auth-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js","App.module.scss","components/Loader/Loader.module.scss","components/Modal/ModalForm.module.scss"],"names":["innitialUserState","name","email","user","createReducer","authActions","registerSuccess","_","payload","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","error","registerFailure","loginFailure","logoutFailure","getCurrentUserFailure","isAuthenticated","combineReducers","contactsState","contacts","contactsActions","onFetchContactsSuccess","state","onAddContactSuccess","type","onDeleteContactSuccess","filter","id","loading","onAddContactRequest","onAddContactFailure","onDeleteContactRequest","onDeleteContactFailure","onFetchContactsRequest","onFetchContactsFailure","onChangeFilter","persistConfig","key","storage","whitelist","persistedAuthReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","auth","contactsReducer","devTools","persistor","persistStore","Loader","color","height","width","timeout","className","loader","app_bar_nav","display","justifyContent","padding","main_nav","alignItems","app_bar_link_decoration","textDecoration","marginRight","left_user_menu","button_mobile","fontSize","background","transition","transform","user_button_mobile","marginLeft","auth_menu","app_bar_link","AuthNav","style","to","routes","login","Button","variant","register","user_menu","minWidth","UserMenu","dispatch","useDispatch","onClick","authOperations","logout","useStyles","makeStyles","Form","onClose","styles","useSelector","contactsSelectors","contactsReselect","useState","number","contact","setContact","handleInputChange","event","target","value","charAt","toUpperCase","slice","formSubmitHandler","testName","test","testNumber","some","contactDuplicateValidation","nameInputValidation","numberInputValidation","contactsOperations","addContactOperation","contact_form","noValidate","autoComplete","onSubmit","preventDefault","Input","placeholder","form_input","inputProps","onChange","required","ModalForm","open","Modal","closeAfterTransition","aria-labelledby","aria-describedby","BackdropProps","modal_container","textAlign","Fade","in","AppBar","isOpen","setIsOpen","userEmail","authSelectors","userEmailSelector","isAuthenticatedSelector","exact","home","userInfo","PrivateRoute","Component","component","props","render","redirectTo","PublicRoute","restricted","HomePage","lazy","ContactsPage","LoginPage","RegisterPage","NotFoundPage","UserInfoPage","App","isLoading","isLoadingSelector","useEffect","getCurrentUser","scss_styles","container","fallback","path","ReactDOM","StrictMode","document","getElementById","registrationError","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","loginError","logoutError","warn","connectionErrorValidation","message","passwordInputValidation","emailInputValidation","userNameSelector","registrationSuccess","success","addContactSuccess","deleteContactSuccess","contactsSelector","filterSelector","createSelector","filteredContactsSelector","normalizeFilter","toLowerCase","includes","axios","defaults","baseURL","headers","common","Authorization","credentials","a","registerRequest","post","response","data","loginRequest","logoutRequest","getState","persistedToken","getCurrentUserRequest","get","module","exports","createAction","fetchContactOperation","then","catch","deleteContactOperation","delete"],"mappings":"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","file":"static/js/main.4774e186.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport authActions from \"./auth-actions\";\n\n// USER\nconst innitialUserState = { name: null, email: null };\n\nconst user = createReducer(innitialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => innitialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerFailure]: (_, { payload }) => payload,\n  [authActions.loginFailure]: (_, { payload }) => payload,\n  [authActions.logoutFailure]: (_, { payload }) => payload,\n  [authActions.getCurrentUserFailure]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n\n  [authActions.logoutSuccess]: () => false,\n  [authActions.registerFailure]: () => false,\n  [authActions.loginFailure]: () => false,\n  [authActions.getCurrentUserFailure]: () => false,\n});\n\nexport default combineReducers({ user, token, error, isAuthenticated });\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from \"./contacts-actions\";\n\nconst contactsState = {\n  items: [],\n  filter: \"\",\n  loading: false,\n};\n\nconst contacts = createReducer(contactsState.items, {\n  // FETCH\n  [contactsActions.onFetchContactsSuccess]: (state, { payload }) => payload,\n\n  // ADD\n  [contactsActions.onAddContactSuccess]: (state, { type, payload }) => [\n    ...state,\n    payload,\n  ],\n\n  // DELETE\n  [contactsActions.onDeleteContactSuccess]: (state, { type, payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(contactsState.loading, {\n  [contactsActions.onAddContactRequest]: () => true,\n  [contactsActions.onAddContactSuccess]: () => false,\n  [contactsActions.onAddContactFailure]: () => false,\n  [contactsActions.onDeleteContactRequest]: () => true,\n  [contactsActions.onDeleteContactSuccess]: () => false,\n  [contactsActions.onDeleteContactFailure]: () => false,\n\n  [contactsActions.onFetchContactsRequest]: () => true,\n  [contactsActions.onFetchContactsSuccess]: () => false,\n  [contactsActions.onFetchContactsFailure]: () => false,\n});\n\nconst filter = createReducer(contactsState.filter, {\n  [contactsActions.onChangeFilter]: (state, { type, payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport logger from \"redux-logger\";\nimport authReducer from \"../redux/auth/auth-reducer\";\nimport contactsReducer from \"../redux/contacts/contacts-reducer\";\n\n// import rootReducer from \"./rootReducer\";\n\nconst persistConfig = {\n  key: \"react_phonebook_token\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst persistedAuthReducer = persistReducer(persistConfig, authReducer);\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistedAuthReducer,\n    contacts: contactsReducer,\n  },\n  middleware: middleware,\n  devTools: true,\n});\n\nexport const persistor = persistStore(store);\n","import Spinner from 'react-loader-spinner';\nimport { loader } from './Loader.module.scss';\n\nconst Loader = () => {\n  return (\n    <div>\n      <Spinner\n        type=\"Circles\"\n        color=\"#00BFFF\"\n        height={150}\n        width={150}\n        timeout={3000}\n        className={loader}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","export const app_bar_nav = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  padding: \"20px 0\",\n};\n\nexport const main_nav = {\n  display: \"flex\",\n  alignItems: \"center\",\n};\n\nexport const app_bar_link_decoration = {\n  textDecoration: \"none\",\n  marginRight: 20,\n};\n\nexport const left_user_menu = {\n  display: \"flex\",\n};\n\nexport const button_mobile = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  width: 50,\n  fontSize: 12,\n\n  background: \"#F4FAFF\",\n  transition: \"200ms\",\n\n  \"&:hover\": {\n    background: \"#F4FAFF\",\n    transform: \"scale(1.1)\",\n    transition: \"200ms\",\n  },\n\n  \"&:active\": {\n    background: \"#F4FAFF\",\n  },\n};\nexport const user_button_mobile = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  width: 300,\n  fontSize: 12,\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  background: \"#F4FAFF\",\n  \"&:hover\": {\n    background: \"#F4FAFF\",\n  },\n  \"&:active\": {\n    background: \"#F4FAFF\",\n  },\n};\n\n// @media (max-width: 767px) {\n// export const mobile_app_bar_nav = {\n//   alignItems: \"center\",\n//   justifyContent: \"space-between\",\n// };\n\n// export const mobile_main_nav = {\n//   display: \"flex\",\n//   justifyContent: \"center\",\n//   alignItems: \"center\",\n// };\n","export const auth_menu = {\n  display: \"flex\",\n  alignItems: \"center\",\n};\n\nexport const app_bar_link = {\n  marginRight: 20,\n  textDecoration: \"none\",\n};\n\nexport const app_bar_link_decoration = {\n  textDecoration: \"none\",\n};\n\nexport const button_mobile = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  width: 50,\n  fontSize: 12,\n  background: \"#F4FAFF\",\n  \"&:hover\": {\n    background: \"#F4FAFF\",\n  },\n  \"&:active\": {\n    background: \"#F4FAFF\",\n  },\n};\n","import {\n  auth_menu,\n  app_bar_link,\n  app_bar_link_decoration,\n  button_mobile,\n} from \"./AuthNavStyle\";\nimport React from \"react\";\n\n// Material\nimport Button from \"@material-ui/core/Button\";\nimport PersonAddOutlinedIcon from \"@material-ui/icons/PersonAddOutlined\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\n\n// Router\nimport { routes } from \"../../../routes/routes\";\nimport { NavLink } from \"react-router-dom\";\n\nconst AuthNav: React.FC = () => {\n  return (\n    <div style={auth_menu}>\n      <NavLink to={routes.login} style={app_bar_link}>\n        <Button style={button_mobile} variant=\"outlined\">\n          <LockOpenIcon color=\"action\" />\n        </Button>\n      </NavLink>\n      <NavLink to={routes.register} style={app_bar_link_decoration}>\n        <Button style={button_mobile} variant=\"outlined\" color=\"primary\">\n          <PersonAddOutlinedIcon color=\"action\" />\n        </Button>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default AuthNav;\n","export const user_menu = {\n  display: \"flex\",\n  alignItems: \"center\",\n};\n\nexport const app_bar_link = {\n  marginRight: 20,\n  textDecoration: \"none\",\n};\n\nexport const button_mobile = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  minWidth: 50,\n  fontSize: 12,\n  background: \"#F4FAFF\",\n  \"&:hover\": {\n    background: \"#F4FAFF\",\n  },\n  \"&:active\": {\n    background: \"#F4FAFF\",\n  },\n};\n","import React from \"react\";\nimport { user_menu, app_bar_link, button_mobile } from \"./UserMenuStyle\";\n\n// Material\nimport Button from \"@material-ui/core/Button\";\nimport ExitToAppOutlinedIcon from \"@material-ui/icons/ExitToAppOutlined\";\n\n// Redux\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../../redux/auth/auth-operations\";\n\nconst UserMenu: React.FC = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <div style={user_menu}>\n        <span style={app_bar_link}>\n          <Button\n            style={button_mobile}\n            variant=\"outlined\"\n            onClick={() => dispatch(authOperations.logout())}\n          >\n            <ExitToAppOutlinedIcon color=\"action\" />\n          </Button>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import { useState } from \"react\";\nimport { form_input, contact_form } from \"./Form.module.scss\";\n\n// Meterial\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\n// Toastify\nimport {\n  nameInputValidation,\n  numberInputValidation,\n  contactDuplicateValidation,\n} from \"../../utils/error-notifications/error-notifications\";\n\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\nimport contactsSelectors from \"../../redux/contacts/contacts-selectors\";\n\nconst useStyles = makeStyles({\n  button_mobile: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 300,\n    fontSize: 12,\n    background: \"#758BFD\",\n    \"&:hover\": {\n      background: \"#758BFD\",\n    },\n    \"&:active\": {\n      background: \"#758BFD\",\n    },\n  },\n});\n\nconst Form = ({ onClose }) => {\n  const styles = useStyles();\n  const contacts = useSelector(contactsSelectors.contactsReselect);\n  const dispatch = useDispatch();\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    number: \"+380\",\n  });\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    setContact({\n      ...contact,\n      [name]: value.charAt(0).toUpperCase() + value.slice(1),\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    formSubmitHandler(contact);\n    onClose && onClose(false);\n  };\n\n  const reset = () => {\n    setContact({\n      name: \"\",\n      number: \"+380\",\n    });\n  };\n\n  const formSubmitHandler = ({ name, number }) => {\n    const testName =\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/.test(name);\n\n    const testNumber =\n      /(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})/.test(\n        number\n      );\n\n    if (contacts.some((contact) => contact.name === name)) {\n      contactDuplicateValidation(name);\n    } else if (testName !== true) {\n      nameInputValidation();\n    } else if (testNumber !== true) {\n      numberInputValidation();\n    } else {\n      dispatch(contactsOperations.addContactOperation({ name, number }));\n      reset();\n    }\n  };\n\n  return (\n    <>\n      <form\n        className={contact_form}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <Input\n          placeholder=\"Name\"\n          className={form_input}\n          inputProps={{ \"aria-label\": \"contact name\" }}\n          type=\"text\"\n          onChange={handleInputChange}\n          name=\"name\"\n          value={contact.name}\n          id=\"name\"\n          required\n          variant=\"outlined\"\n        />\n        <Input\n          placeholder=\"Number\"\n          className={form_input}\n          inputProps={{ \"aria-label\": \"contact number\" }}\n          type=\"tel\"\n          onChange={handleInputChange}\n          name=\"number\"\n          value={contact.number}\n          id=\"number\"\n          required\n        />\n        <Button\n          variant=\"outlined\"\n          type=\"submit\"\n          className={styles.button_mobile}\n        >\n          <AddIcon color=\"action\" />\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","import styles from \"./ModalForm.module.scss\";\n\n// Material\nimport Modal from \"@material-ui/core/Modal\";\nimport Fade from \"@material-ui/core/Fade\";\n\n// Comps\nimport Form from \"../Form\";\n\nconst ModalForm = ({ open, onClose }) => {\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={() => onClose(false)}\n        closeAfterTransition\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <div className={styles.modal_container}>\n          <h4 style={{ textAlign: \"center\" }}>Add contact</h4>\n          <Form onClose={onClose} />\n        </div>\n      </Modal>\n      <Fade in={open}>\n        <div></div>\n      </Fade>\n    </div>\n  );\n};\n\nexport default ModalForm;\n","import React, { useState } from \"react\";\n\nimport {\n  app_bar_nav,\n  app_bar_link_decoration,\n  main_nav,\n  left_user_menu,\n  button_mobile,\n  user_button_mobile,\n} from \"./AppBarStyle\";\n\n// Router\nimport { routes } from \"../../routes/routes\";\nimport { NavLink } from \"react-router-dom\";\n\n// Redux\nimport authSelectors from \"../../redux/auth/auth-selectors\";\nimport { useSelector } from \"react-redux\";\n\n// Material\nimport Button from \"@material-ui/core/Button\";\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\nimport MenuBookOutlinedIcon from \"@material-ui/icons/MenuBookOutlined\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\n// Modal\nimport ControlPointSharpIcon from \"@material-ui/icons/ControlPointSharp\";\n\n// Comps\nimport AuthNav from \"./AuthNav/AuthNav\";\nimport UserMenu from \"./UserMenu/UserMenu\";\nimport Modal from \"../Modal\";\n\nconst AppBar: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const userEmail = useSelector(authSelectors.userEmailSelector);\n  const isAuthenticated = useSelector(authSelectors.isAuthenticatedSelector);\n  return (\n    <header>\n      <nav style={app_bar_nav}>\n        <div style={main_nav}>\n          <NavLink exact to={routes.home} style={app_bar_link_decoration}>\n            <Button style={button_mobile} variant=\"outlined\">\n              <HomeOutlinedIcon color=\"action\" />\n            </Button>\n          </NavLink>\n\n          {/* Modal */}\n          <Modal open={isOpen} onClose={setIsOpen} />\n\n          {isAuthenticated ? (\n            <div style={left_user_menu}>\n              <NavLink to={routes.contacts} style={app_bar_link_decoration}>\n                <Button\n                  style={button_mobile}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                >\n                  <MenuBookOutlinedIcon color=\"action\" />\n                </Button>\n              </NavLink>\n              <Button\n                variant=\"outlined\"\n                style={button_mobile}\n                onClick={() => {\n                  setIsOpen(true);\n                }}\n              >\n                <ControlPointSharpIcon color=\"action\" />\n              </Button>\n            </div>\n          ) : null}\n        </div>\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\n      </nav>\n\n      {/* User */}\n      {isAuthenticated && (\n        <div>\n          <NavLink to={routes.userInfo} style={app_bar_link_decoration}>\n            <Button style={user_button_mobile} variant=\"outlined\">\n              <AccountBoxIcon color=\"action\" />\n              <span>{userEmail}</span>\n            </Button>\n          </NavLink>\n        </div>\n      )}\n    </header>\n  );\n};\n\nexport default AppBar;\n","// Router\nimport { Route, Redirect } from \"react-router-dom\";\n\n// Redux\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\n\nconst PrivateRoute = ({ component: Component, ...props }) => {\n  const isAuthenticated = useSelector(authSelectors.isAuthenticatedSelector);\n\n  return (\n    <Route\n      render={() => {\n        return isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={props.redirectTo} />\n        );\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","// Router\nimport { Route, Redirect } from \"react-router-dom\";\n\n// Redux\nimport { useSelector } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\n\nconst PublicRoute = ({ component: Component, ...props }) => {\n  const isAuthenticated = useSelector(authSelectors.isAuthenticatedSelector);\n\n  return (\n    <Route\n      render={() => {\n        return isAuthenticated && props.restricted ? (\n          <Redirect to={props.redirectTo} />\n        ) : (\n          <Component {...props} />\n        );\n      }}\n    />\n  );\n};\n\nexport default PublicRoute;\n","import scss_styles from \"./App.module.scss\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n// React\nimport { useEffect, Suspense, lazy } from \"react\";\n\n// Comps\nimport Loader from \"./components/Loader\";\nimport AppBar from \"./components/AppBar/AppBar\";\n\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport contactsSelectors from \"./redux/contacts/contacts-selectors\";\nimport authOperations from \"./redux/auth/auth-operations\";\n\n// Router\nimport { routes } from \"./routes/routes\";\nimport { Switch, Route } from \"react-router-dom\";\n\n// Routes\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\n\n// Toastify\nimport { ToastContainer } from \"react-toastify\";\n\n// Lazy\nconst HomePage = lazy(\n  () => import(\"./pages/Home/Home\" /* webpackChunkName: \"home-page\" */)\n);\nconst ContactsPage = lazy(\n  () =>\n    import(\"./pages/Contacts/Contacts\" /* webpackChunkName: \"contacts-page\" */)\n);\nconst LoginPage = lazy(\n  () => import(\"./pages/Login/Login\" /* webpackChunkName: \"login-page\" */)\n);\nconst RegisterPage = lazy(\n  () =>\n    import(\"./pages/Register/Register\" /* webpackChunkName: \"register-page\" */)\n);\nconst NotFoundPage = lazy(\n  () => import(\"./pages/NotFoundPage\" /* webpackChunkName: \"404-page\" */)\n);\nconst UserInfoPage = lazy(\n  () =>\n    import(\"./pages/UserInfo/UserInfo\" /* webpackChunkName: \"userInfo-page\" */)\n);\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(contactsSelectors.isLoadingSelector);\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className={scss_styles.container}>\n      <div>\n        <AppBar />\n      </div>\n      <div>\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <Route exact path={routes.home} component={HomePage} />\n            <PublicRoute\n              path={routes.login}\n              component={LoginPage}\n              redirectTo=\"/contacts\"\n              restricted\n            />\n            <PublicRoute\n              path={routes.register}\n              component={RegisterPage}\n              redirectTo=\"/contacts\"\n              restricted\n            />\n            <PrivateRoute\n              path={routes.contacts}\n              component={ContactsPage}\n              redirectTo=\"/login\"\n            />\n            <PrivateRoute\n              path={routes.userInfo}\n              component={UserInfoPage}\n              redirectTo=\"/login\"\n            />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </Suspense>\n      </div>\n\n      {isLoading && <Loader />}\n\n      {/* toast */}\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default App;\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Router\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\n// Comp\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","type TRoutes = {\n  home: string;\n  login: string;\n  register: string;\n  contacts: string;\n  userInfo: string;\n};\n\nexport const routes: TRoutes = {\n  home: \"/\",\n  login: \"/login\",\n  register: \"/register\",\n  contacts: \"/contacts\",\n  userInfo: \"/user-info\",\n};\n","import { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const registrationError = () =>\n  toast.error(\"Registration Error\", {\n    position: \"top-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\nexport const loginError = () =>\n  toast.error(\"Login Error\", {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\nexport const logoutError = () =>\n  toast.error(\"Logout Error\", {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\n// Validation\nexport const nameInputValidation = () =>\n  toast.error(\n    \"The name can only consist of letters, apostrophes, dashes and spaces.\",\n    {\n      position: \"bottom-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    }\n  );\n\nexport const numberInputValidation = () =>\n  toast.error(\n    \"The phone number must be 11-12 digits long and can contain numbers, spaces, dashes, pot-bellied brackets and can start with +\",\n    {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    }\n  );\n\nexport const contactDuplicateValidation = (name: string) =>\n  toast.warn(`${name} is already in contacts!`, {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\nexport const connectionErrorValidation = (message: string) =>\n  toast.error(`${message}`, {\n    position: \"bottom-right\",\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\nexport const passwordInputValidation = () =>\n  toast.error(\"Minimum eight characters, at least one letter and one number\", {\n    position: \"bottom-right\",\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\nexport const emailInputValidation = () =>\n  toast.error(\"@\", {\n    position: \"bottom-right\",\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n","const userEmailSelector = (state) => state.auth.user.email;\nconst userNameSelector = (state) => state.auth.user.name;\n\nconst isAuthenticatedSelector = (state) => state.auth.isAuthenticated;\n\nconst authSelectors = {\n  userEmailSelector,\n  userNameSelector,\n  isAuthenticatedSelector,\n};\n\nexport default authSelectors;\n","import { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const registrationSuccess = () =>\n  toast.success(\"Registration Success\", {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\nexport const loginSuccess = () =>\n  toast.success(\"Login Success\", {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\nexport const logoutSuccess = () =>\n  toast.success(\"Logout Success\", {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\nexport const addContactSuccess = (name: string) =>\n  toast.success(`${name} added`, {\n    position: \"bottom-right\",\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\nexport const deleteContactSuccess = () =>\n  toast.success(`Contact deleted`, {\n    position: \"bottom-right\",\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n","import { createSelector } from \"reselect\";\n\n// SELECTORS\n\nconst contactsSelector = (state) => state.contacts.contacts;\n\nconst filterSelector = (state) => state.contacts.filter;\n\nconst isLoadingSelector = (state) => state.contacts.loading;\n\n// RESELECT\n\nconst contactsReselect = createSelector(\n  contactsSelector,\n  (contacts) => contacts\n);\n\nconst filteredContactsSelector = createSelector(\n  [contactsSelector, filterSelector],\n  (contacts, filter) => {\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      (contact) =>\n        contact.name.toLowerCase().includes(normalizeFilter) ||\n        contact.number.toLowerCase().includes(normalizeFilter)\n    );\n  }\n);\n\nconst contactsSelectors = {\n  contactsSelector,\n  filterSelector,\n  isLoadingSelector,\n\n  contactsReselect,\n  filteredContactsSelector,\n};\n\nexport default contactsSelectors;\n","import axios from \"axios\";\nimport authActions from \"./auth-actions\";\n\nimport {\n  loginSuccess,\n  registrationSuccess,\n  logoutSuccess,\n} from \"../../utils/success-notifications/success-notifications\";\n\nimport {\n  loginError,\n  registrationError,\n  logoutError,\n} from \"../../utils/error-notifications/error-notifications\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\n// REGISTER\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n\n    registrationSuccess();\n  } catch (error) {\n    dispatch(authActions.registerFailure(error));\n\n    registrationError();\n  }\n};\n\n// LOGIN\nconst login = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n\n    loginSuccess();\n  } catch (error) {\n    dispatch(authActions.loginFailure(error));\n\n    loginError();\n  }\n};\n\n// LOGOUT\nconst logout = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n\n    logoutSuccess();\n  } catch (error) {\n    dispatch(authActions.logoutFailure(error));\n\n    logoutError();\n  }\n};\n\n// Get Current User\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\"/users/current\");\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserFailure(error));\n  }\n};\n\nconst authOperations = {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n};\n\nexport default authOperations;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"Form_contact_form__2kgVi\",\"form_input\":\"Form_form_input__3p7qB\"};","import { createAction } from \"@reduxjs/toolkit\";\n\n// REGISTER\nconst registerRequest = createAction(\"auth/REGISTER_R\");\nconst registerSuccess = createAction(\"auth/REGISTER_S\");\nconst registerFailure = createAction(\"auth/REGISTER_F\");\n\n// LOGIN\nconst loginRequest = createAction(\"auth/LOGIN_R\");\nconst loginSuccess = createAction(\"auth/LOGIN_S\");\nconst loginFailure = createAction(\"auth/LOGIN_F\");\n\n// LOGOUT\nconst logoutRequest = createAction(\"auth/LOGOUT_R\");\nconst logoutSuccess = createAction(\"auth/LOGOUT_S\");\nconst logoutFailure = createAction(\"auth/LOGOUT_F\");\n\n// Get Current User\nconst getCurrentUserRequest = createAction(\"auth/GET_CURRENT_USER_R\");\nconst getCurrentUserSuccess = createAction(\"auth/GET_CURRENT_USER_S\");\nconst getCurrentUserFailure = createAction(\"auth/GET_CURRENT USER_F\");\n\nconst authActions = {\n  registerRequest,\n  registerSuccess,\n  registerFailure,\n  loginRequest,\n  loginSuccess,\n  loginFailure,\n  logoutRequest,\n  logoutSuccess,\n  logoutFailure,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserFailure,\n};\n\nexport default authActions;\n","import axios from \"axios\";\nimport contactsActions from \"./contacts-actions\";\nimport {\n  addContactSuccess,\n  deleteContactSuccess,\n} from \"../../utils/success-notifications/success-notifications\";\nimport { connectionErrorValidation } from \"../../utils/error-notifications/error-notifications\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\n// FETCH CONTACTS\nconst fetchContactOperation = (payload) => (dispatch) => {\n  dispatch(contactsActions.onFetchContactsRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(contactsActions.onFetchContactsSuccess(data)))\n    .catch((error) => {\n      connectionErrorValidation(error.message);\n      dispatch(contactsActions.onFetchContactsFailure(error));\n    });\n};\n\n// ADD\nconst addContactOperation = (payload) => (dispatch) => {\n  dispatch(contactsActions.onAddContactRequest());\n\n  axios\n    .post(\"/contacts\", payload)\n    .then(({ data }) => {\n      dispatch(contactsActions.onAddContactSuccess(data));\n      addContactSuccess(payload.name);\n    })\n    .catch((error) => {\n      connectionErrorValidation(error.message);\n      dispatch(contactsActions.onAddContactFailure(error));\n    });\n};\n\n// DELETE\nconst deleteContactOperation = (id) => (dispatch) => {\n  dispatch(contactsActions.onDeleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => {\n      dispatch(contactsActions.onDeleteContactSuccess(id));\n      deleteContactSuccess();\n    })\n    .catch((error) => {\n      connectionErrorValidation(error.message);\n      dispatch(contactsActions.onDeleteContactFailure(error));\n    });\n};\n\nconst contactsOperations = {\n  fetchContactOperation,\n  addContactOperation,\n  deleteContactOperation,\n};\n\nexport default contactsOperations;\n","import { createAction } from \"@reduxjs/toolkit\";\n\n// FETCH CONTACTS\nconst onFetchContactsRequest = createAction(\"contacts/FETCH_CONTACTS_R\");\nconst onFetchContactsSuccess = createAction(\"contacts/FETCH_CONTACTS_S\");\nconst onFetchContactsFailure = createAction(\"contacts/FETCH_CONTACTS_F\");\n\n// ADD\nconst onAddContactRequest = createAction(\"contacts/ADD_CONTACT_R\");\nconst onAddContactSuccess = createAction(\"contacts/ADD_CONTACT_S\");\nconst onAddContactFailure = createAction(\"contacts/ADD_CONTACT_F\");\n\n// DELETE\nconst onDeleteContactRequest = createAction(\"contacts/DELETE_CONTACT_R\");\nconst onDeleteContactSuccess = createAction(\"contacts/DELETE_CONTACT_S\");\nconst onDeleteContactFailure = createAction(\"contacts/DELETE_CONTACT_F\");\n\n// FILTER\nconst onChangeFilter = createAction(\"contacts/FILTER_CONTACT\");\n\nconst contactsActions = {\n  onFetchContactsRequest,\n  onFetchContactsSuccess,\n  onFetchContactsFailure,\n  onAddContactRequest,\n  onAddContactSuccess,\n  onAddContactFailure,\n  onDeleteContactRequest,\n  onDeleteContactSuccess,\n  onDeleteContactFailure,\n  onChangeFilter,\n};\n\nexport default contactsActions;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2hZcM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_container\":\"ModalForm_modal_container__yFerW\"};"],"sourceRoot":""}