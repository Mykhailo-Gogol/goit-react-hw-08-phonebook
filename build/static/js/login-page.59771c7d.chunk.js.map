{"version":3,"sources":["pages/Login/Login.module.scss","components/LoginForm/LoginForm.module.scss","components/LoginForm/LoginForm.js","pages/Login/Login.js"],"names":["module","exports","useStyles","makeStyles","button_mobile","display","alignItems","justifyContent","width","fontSize","background","LoginForm","styles","dispatch","useDispatch","useState","email","password","credentials","setCredentials","handleInputChange","event","target","name","value","formSubmitHandler","testEmail","test","testPassword","emailInputValidation","passwordInputValidation","authOperations","login","className","contact_form","noValidate","autoComplete","onSubmit","preventDefault","Input","placeholder","form_input","inputProps","type","onChange","id","required","Button","variant","color","Login","login_page_wrapper"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,mBAAqB,oC,oBCAvCD,EAAOC,QAAU,CAAC,aAAe,gCAAgC,WAAa,gC,+KCqBxEC,EAAYC,YAAW,CAC3BC,cAAe,CACbC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,MAAO,IACPC,SAAU,GACVC,WAAY,UACZ,UAAW,CACTA,WAAY,WAEd,WAAY,CACVA,WAAY,cAiGHC,EA5FG,WAChB,IAAMC,EAASV,IACTW,EAAWC,cAFK,EAIgBC,mBAAS,CAC7CC,MAAO,GACPC,SAAU,KANU,mBAIfC,EAJe,KAIFC,EAJE,KAShBC,EAAoB,SAACC,GAAW,IAAD,EACXA,EAAMC,OAAtBC,EAD2B,EAC3BA,KAAMC,EADqB,EACrBA,MAEdL,EAAe,2BACVD,GADS,kBAEXK,EAAOC,MAgBNC,EAAoB,SAAC,GAAyB,IAAvBT,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC5BS,EAAY,6BAA6BC,KAAKX,GAE9CY,EAAe,yCAAyCD,KAC5DV,IAGgB,IAAdS,EACFG,eAC0B,IAAjBD,EACTE,eAEAjB,EAASkB,IAAeC,MAAM,CAAEhB,QAAOC,cAlBzCE,EAAe,CACbH,MAAO,GACPC,SAAU,OAqBd,OACE,qCACE,uBACEgB,UAAWC,eACXC,YAAU,EACVC,aAAa,KACbC,SAnCe,SAAChB,GACpBA,EAAMiB,iBACNb,EAAkBP,IA6BhB,UAME,cAACqB,EAAA,EAAD,CACEC,YAAY,QACZP,UAAWQ,aACXC,WAAY,CAAE,aAAc,iBAC5BC,KAAK,QACLC,SAAUxB,EACVG,KAAK,QACLC,MAAON,EAAYF,MACnB6B,GAAG,QACHC,UAAQ,EACRV,aAAa,OAEf,cAACG,EAAA,EAAD,CACEC,YAAY,WACZP,UAAWQ,aACXC,WAAY,CAAE,aAAc,oBAC5BC,KAAK,WACLC,SAAUxB,EACVG,KAAK,WACLC,MAAON,EAAYD,SACnB4B,GAAG,WACHC,UAAQ,EACRV,aAAa,OAEf,cAACW,EAAA,EAAD,CACEC,QAAQ,YACRL,KAAK,SACLV,UAAWrB,EAAOR,cAHpB,SAKE,cAAC,IAAD,CAAc6C,MAAM,gBAGxB,cAAC,IAAD,QCjHSC,UARD,WACZ,OACE,qBAAKjB,UAAWkB,qBAAhB,SACE,cAAC,EAAD","file":"static/js/login-page.59771c7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_page_wrapper\":\"Login_login_page_wrapper__2XGcg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"LoginForm_contact_form__2dkFe\",\"form_input\":\"LoginForm_form_input__2AClL\"};","import { useState } from \"react\";\nimport { form_input, contact_form } from \"./LoginForm.module.scss\";\n\n// Meterial\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\n\n// Toastify\nimport { ToastContainer } from \"react-toastify\";\nimport {\n  emailInputValidation,\n  passwordInputValidation,\n} from \"../../utils/error-notifications/error-notifications\";\n\n// Redux\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../redux/auth/auth-operations\";\n\n// Styles\nconst useStyles = makeStyles({\n  button_mobile: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 300,\n    fontSize: 12,\n    background: \"#758BFD\",\n    \"&:hover\": {\n      background: \"#758BFD\",\n    },\n    \"&:active\": {\n      background: \"#758BFD\",\n    },\n  },\n});\n\nconst LoginForm = () => {\n  const styles = useStyles();\n  const dispatch = useDispatch();\n\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    setCredentials({\n      ...credentials,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    formSubmitHandler(credentials);\n  };\n\n  const reset = () => {\n    setCredentials({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  const formSubmitHandler = ({ email, password }) => {\n    const testEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n\n    const testPassword = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/.test(\n      password\n    );\n\n    if (testEmail !== true) {\n      emailInputValidation();\n    } else if (testPassword !== true) {\n      passwordInputValidation();\n    } else {\n      dispatch(authOperations.login({ email, password }));\n      reset();\n    }\n  };\n\n  return (\n    <>\n      <form\n        className={contact_form}\n        noValidate\n        autoComplete=\"on\"\n        onSubmit={handleSubmit}\n      >\n        <Input\n          placeholder=\"Email\"\n          className={form_input}\n          inputProps={{ \"aria-label\": \"contact email\" }}\n          type=\"email\"\n          onChange={handleInputChange}\n          name=\"email\"\n          value={credentials.email}\n          id=\"email\"\n          required\n          autoComplete=\"on\"\n        />\n        <Input\n          placeholder=\"Password\"\n          className={form_input}\n          inputProps={{ \"aria-label\": \"contact password\" }}\n          type=\"password\"\n          onChange={handleInputChange}\n          name=\"password\"\n          value={credentials.password}\n          id=\"password\"\n          required\n          autoComplete=\"on\"\n        />\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          className={styles.button_mobile}\n        >\n          <LockOpenIcon color=\"action\" />\n        </Button>\n      </form>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default LoginForm;\n","import { login_page_wrapper } from \"./Login.module.scss\";\n\n// Comps\nimport LoginForm from \"../../components/LoginForm\";\n\nconst Login = () => {\n  return (\n    <div className={login_page_wrapper}>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}